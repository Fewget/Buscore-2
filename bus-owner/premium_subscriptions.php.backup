<?php
require_once '../includes/config.php';
require_once '../includes/functions.php';

// Check if user is logged in and is a bus owner
check_bus_owner_access();

$page_title = 'Premium Subscriptions';
$success = isset($_GET['success']) ? $_GET['success'] : '';
$error = isset($_GET['error']) ? $_GET['error'] : '';

// Get bus owner's buses
$buses = $pdo->prepare("SELECT * FROM buses WHERE user_id = ? ORDER BY registration_number ASC");
$buses->execute([$_SESSION['user_id']]);
$buses = $buses->fetchAll(PDO::FETCH_ASSOC);

// Get active subscriptions for these buses
$busIds = array_column($buses, 'id');
$subscriptions = [];

if (!empty($busIds)) {
    $placeholders = str_repeat('?,', count($busIds) - 1) . '?';
    $stmt = $pdo->prepare("
        SELECT s.*, p.name as package_name, p.features, p.duration_days, p.price,
               b.registration_number, b.bus_name
        FROM bus_subscriptions s
        JOIN premium_packages p ON s.package_id = p.id
        JOIN buses b ON s.bus_id = b.id
        WHERE s.bus_id IN ($placeholders) 
        AND s.is_active = 1
        AND (s.end_date IS NULL OR s.end_date >= NOW())
    ");
    $stmt->execute($busIds);
    
    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        $subscriptions[$row['bus_id']] = $row;
    }
}

// Get available packages
$packages = $pdo->query("SELECT * FROM premium_packages WHERE is_active = 1 ORDER BY price ASC")->fetchAll();
?>

<?php include '../includes/header.php'; ?>

<div class="container-fluid">
    <!-- Status Messages -->
    <?php if (!empty($success)) { ?>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <?php echo htmlspecialchars($success); ?>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    <?php } ?>
    
    <?php if (!empty($error)) { ?>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <?php echo htmlspecialchars($error); ?>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    <?php } ?>
    
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0"><?php echo $page_title; ?></h1>
            <p class="text-muted mb-0">Upgrade your bus listings with premium features</p>
        </div>
        <a href="dashboard.php" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
        </a>
    </div>

    <?php if (empty($buses)) { ?>
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-bus fa-4x text-muted mb-3"></i>
                <h4>No Buses Found</h4>
                <p class="text-muted">You don't have any buses registered yet.</p>
            </div>
            <a href="add-bus.php" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i> Add Your First Bus
            </a>
        </div>
    <?php } else { ?>
        <!-- Bus Selection for Premium Features -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Select Buses for Premium Features</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="selectAllBuses">
                            <label class="form-check-label fw-bold" for="selectAllBuses">
                                Select All Buses
                            </label>
                        </div>
                    </div>
                    <?php foreach ($buses as $bus) { ?>
                    <div class="col-md-4 mb-2">
                        <div class="form-check">
                            <input class="form-check-input bus-checkbox" type="checkbox" 
                                   id="bus_<?php echo $bus['id']; ?>" 
                                   value="<?php echo $bus['id']; ?>">
                            <label class="form-check-label" for="bus_<?php echo $bus['id']; ?>">
                                <?php echo !empty($bus['registration_number']) ? htmlspecialchars($bus['registration_number']) : 'Bus #' . $bus['id']; ?>
                                <?php if (!empty($bus['bus_name'])) { ?>
                                    (<?php echo htmlspecialchars($bus['bus_name']); ?>)
                                <?php } ?>
                            </label>
                        </div>
                    </div>
                    <?php } ?>
                </div>
            </div>
        </div>

        <!-- Available Packages -->
        <div class="row">
            <?php foreach ($packages as $package) { 
                $features = json_decode($package['features'], true);
                $isPopular = $package['id'] == 2; // Mark the middle package as popular
            ?>
                <div class="col-md-4 mb-4">
                    <div class="card h-100 package-card <?php echo $isPopular ? 'border-primary border-2' : 'border-0'; ?>">
                        <?php if ($isPopular) { ?>
                            <div class="card-header bg-primary text-white text-center py-2">
                                <small class="fw-bold">MOST POPULAR</small>
                            </div>
                        <?php } else { ?>
                            <div class="card-header bg-white"></div>
                        <?php } ?>
                        
                        <div class="card-body text-center p-4">
                            <h3 class="card-title"><?php echo htmlspecialchars($package['name']); ?></h3>
                            <div class="my-4">
                                <span class="display-4 fw-bold">Rs. <?php echo number_format($package['price'], 2); ?></span>
                                <span class="text-muted">/month</span>
                            </div>
                            
                            <ul class="list-unstyled mb-4">
                                <?php 
                                if (is_array($features)) {
                                    foreach ($features as $feature) {
                                        echo '<li class="mb-2">
                                            <i class="fas fa-check text-success me-2"></i>
                                            ' . htmlspecialchars($feature) . '
                                        </li>';
                                    }
                                }
                                ?>
                            </ul>
                            
                            <button class="btn btn-primary btn-lg w-100 py-2 select-package-btn" 
                                    data-package-id="<?php echo $package['id']; ?>"
                                    data-package-name="<?php echo htmlspecialchars($package['name']); ?>"
                                    data-package-price="<?php echo $package['price']; ?>"
                                    data-features='<?php echo json_encode($features); ?>'>
                                <span class="btn-text">
                                    <i class="fas fa-credit-card me-2"></i>Subscribe Selected Buses
                                </span>
                                <div class="spinner-border spinner-border-sm ms-2 d-none" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                            </button>
                            
                            <div class="mt-2 text-center">
                                <small class="text-muted">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Select buses from the list above
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            <?php } ?>
        </div>
    <?php } ?>
</div>

<!-- Bus Selection Modal -->
<div class="modal fade" id="busSelectionModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Bus Selection Required</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Please select at least one bus to continue with the subscription.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Payment Confirmation Modal -->
<div class="modal" id="paymentConfirmationModal" tabindex="-1" aria-labelledby="paymentConfirmationModalLabel" aria-hidden="true" style="display: none; z-index: 1060; background-color: rgba(0,0,0,0.5);">
    <div class="modal-dialog modal-dialog-centered" style="z-index: 1061;">
        <div class="modal-content" style="z-index: 1062;">
            <div class="modal-header">
                <h5 class="modal-title" id="paymentConfirmationModalLabel">Confirm Subscription</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>You are about to subscribe the following buses to <span id="packageName"></span>:</p>
                <ul id="selectedBusesList" class="mb-3"></ul>
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    Total amount to be charged: <strong>Rs. <span id="totalAmount">0.00</span></strong>
                </div>
                <div class="form-check mb-3">
                    <input class="form-check-input" type="checkbox" id="termsCheck">
                    <label class="form-check-label" for="termsCheck">
                        I agree to the <a href="terms.php" target="_blank">Terms of Service</a> and 
                        <a href="privacy.php" target="_blank">Privacy Policy</a>
                    </label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="proceedToPayment" disabled>
                    <i class="fas fa-credit-card me-2"></i>Proceed to Payment
                    <span class="spinner-border spinner-border-sm ms-2 d-none" role="status" aria-hidden="true"></span>
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    /* Modal and overlay styling */
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.5) !important;
        z-index: 1040 !important;
        opacity: 0.5 !important;
    }
    
    /* Modal container */
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1050 !important;
        display: block !important;
        opacity: 1 !important;
        overflow-x: hidden;
        overflow-y: auto;
        outline: 0;
    }
    
    /* Ensure modal is visible when shown */
    .modal.show {
        display: block !important;
        opacity: 1 !important;
    }
    
    /* Modal dialog */
    .modal-dialog {
        position: relative;
        width: auto;
        margin: 1.75rem auto;
        max-width: 500px;
        pointer-events: none;
        z-index: 1060 !important;
    }
    
    /* Modal content */
    .modal-content {
        position: relative;
        display: flex;
        flex-direction: column;
        width: 100%;
        pointer-events: auto;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-radius: 0.3rem;
        outline: 0;
        z-index: 1070 !important;
    }
    
    /* Ensure modal is visible */
    .modal.show {
        display: block !important;
    }
    
    /* Prevent body scroll when modal is open */
    body.modal-open {
        overflow: hidden;
        padding-right: 0 !important;
    }
    
    /* Re-enable pointer events for modal content */
    .modal-content {
        pointer-events: auto;
        border: none;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3);
    }
    
    .package-card {
        transition: all 0.3s ease;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
    }
    
    .package-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.5rem 1.5rem rgba(78, 115, 223, 0.2);
    }
    
    .package-card .card-header {
        border: none;
    }
    
    .package-card .card-body {
        padding: 2rem;
    }
    
    .package-card .btn {
        border-radius: 50px;
        font-weight: 600;
        letter-spacing: 0.5px;
    }
    
    .package-card .display-4 {
        font-size: 2.5rem;
        font-weight: 700;
    }
    
    .package-card ul li {
        padding: 0.5rem 0;
        border-bottom: 1px solid #f0f0f0;
    }
    
    .package-card ul li:last-child {
        border-bottom: none;
    }
    
    .package-card .text-muted {
        color: #858796 !important;
    }
    
    /* Responsive adjustments */
    @media (max-width: 768px) {
        .package-card {
            margin-bottom: 1.5rem;
        }
    }
    
    /* Ensure modal is clickable */
    .modal {
        z-index: 1060; /* Higher than default */
    }
    
    .modal-backdrop {
        z-index: 1050; /* Just below modal */
    }
    
    /* Make sure form elements are clickable */
    .form-check-input {
        z-index: 1;
        position: relative;
    }
    
    /* Ensure modal content is above backdrop */
    .modal-content {
        position: relative;
        z-index: 1061;
    }
    
    /* Make sure links in labels are clickable */
    .form-check-label a {
        position: relative;
        z-index: 1;
    }
    
    /* Ensure payment confirmation modal is always on top */
    #paymentConfirmationModal {
        z-index: 1080 !important; /* Higher than Bootstrap's default modal z-index */
    }
    
    #paymentConfirmationModal .modal-backdrop {
        z-index: 1079 !important; /* Just below the modal */
    }
    
    /* Ensure modal is properly positioned */
    .modal {
        z-index: 1050; /* Default Bootstrap modal z-index */
    }
    
    .modal-backdrop {
        z-index: 1040; /* Default Bootstrap backdrop z-index */
    }
</style>
<script>
$(document).ready(function() {
    console.log('jQuery document ready, initializing select all functionality...');
    
    // Function to update the select all checkbox state
    function updateSelectAllState() {
        const allChecked = $('.bus-checkbox:checked').length === $('.bus-checkbox').length;
        $('#selectAllBuses').prop('checked', allChecked && $('.bus-checkbox').length > 0);
        console.log('Select all state updated:', allChecked);
    }
    
    // Initialize select all functionality
    const $selectAll = $('#selectAllBuses');
    const $busCheckboxes = $('.bus-checkbox');
    
    // Handle select all checkbox
    $selectAll.on('change', function() {
        const isChecked = $(this).is(':checked');
        $busCheckboxes.prop('checked', isChecked);
        console.log('Select all changed:', isChecked);
    });
    
    // Handle individual checkbox changes
    $busCheckboxes.on('change', function() {
        updateSelectAllState();
    });
    
    // Set initial state
    updateSelectAllState();
    
    // Check again after a short delay in case of dynamic content
    setTimeout(updateSelectAllState, 500);
    
    // Initialize the payment modal
    let paymentModal = null;
    
    function initPaymentModal() {
        if (!paymentModal) {
            const modalElement = document.getElementById('paymentConfirmationModal');
            if (modalElement) {
                paymentModal = new bootstrap.Modal(modalElement, {
                    backdrop: 'static',
                    keyboard: false
                });
                
                // Handle close button and outside click
                $(modalElement).find('.btn-close, .btn-secondary').off('click').on('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    paymentModal.hide();
                });
                
                // Reset form when modal is closed
                modalElement.addEventListener('hidden.bs.modal', function() {
                    $('#termsCheck').prop('checked', false);
                    $('#proceedToPayment').prop('disabled', true);
                });
            }
        }
        return paymentModal;
    }
    
    // Handle package selection buttons with event delegation
    $(document).on('click', '.select-package-btn', function(e) {
        e.preventDefault();
        e.stopPropagation();
        console.log('Subscribe button clicked');
        
        const $this = $(this);
        const selectedBuses = $('.bus-checkbox:checked');
        
        if (selectedBuses.length === 0) {
            const busModal = new bootstrap.Modal(document.getElementById('busSelectionModal'));
            busModal.show();
            return;
        }
        
        const packageId = $this.data('package-id');
        const packageName = $this.data('package-name');
        const packagePrice = parseFloat($this.data('package-price'));
        const busIds = selectedBuses.map(function() {
            return $(this).val();
        }).get();
        
        console.log('Package ID:', packageId);
        console.log('Selected Buses:', busIds);
        
        // Update modal content
        $('#packageName').text(packageName);
        
        const $busesList = $('#selectedBusesList').empty();
        
        selectedBuses.each(function() {
            const $checkbox = $(this);
            const busLabel = $('label[for="' + $checkbox.attr('id') + '"]').text().trim();
            $busesList.append($('<li>').text(busLabel));
        });
        
        // Calculate and display total amount
        const totalAmount = packagePrice * selectedBuses.length;
        $('#totalAmount').text(totalAmount.toFixed(2));
        
        // Reset the modal state
        $('#termsCheck').prop('checked', false);
        $('#proceedToPayment').prop('disabled', true);
        
        // Store the current package and bus IDs on the modal for reference
        const $modal = $('#paymentConfirmationModal');
        $modal.data('package-id', packageId);
        $modal.data('bus-ids', busIds);
        
        // Clear any previous states
        $modal.find('.alert').remove();
        $modal.find('.is-invalid').removeClass('is-invalid');
        
        // Set up the payment button
        const $paymentBtn = $('#proceedToPayment').off('click').on('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            processPayment(packageId, busIds, this);
        });
        
        // Set up the terms and conditions checkbox handler
        $('#termsCheck').off('change').on('change', function() {
            $('#proceedToPayment').prop('disabled', !$(this).is(':checked'));
        });
        
        // Get the modal element
        const modalElement = document.getElementById('paymentConfirmationModal');
        if (!modalElement) {
            console.error('Payment confirmation modal element not found');
            return;
        }
        
        // Use Bootstrap 5 modal if available
        if (typeof bootstrap !== 'undefined' && bootstrap.Modal) {
            // Hide any existing modals
            document.querySelectorAll('.modal.show').forEach(modal => {
                bootstrap.Modal.getInstance(modal)?.hide();
            });
            
            // Initialize or get existing modal
            let paymentModal = bootstrap.Modal.getInstance(modalElement);
            if (!paymentModal) {
                paymentModal = new bootstrap.Modal(modalElement, {
                    backdrop: 'static',
                    keyboard: false
                });
            }
            
            // Show the modal
            paymentModal.show();
            
            // Ensure modal is on top
            modalElement.style.zIndex = '99999';
            
            // Handle backdrop
            const backdrop = document.querySelector('.modal-backdrop');
            if (backdrop) {
                backdrop.style.zIndex = '99998';
            }
            
            // Focus on terms checkbox
            setTimeout(() => {
                const termsCheck = document.getElementById('termsCheck');
                if (termsCheck) termsCheck.focus();
            }, 100);
        } 
        // Fallback to jQuery modal
        else if (typeof $ !== 'undefined' && $.fn.modal) {
            $('.modal').modal('hide');
            $(modalElement).modal({
                backdrop: 'static',
                keyboard: false
            }).modal('show');
        } 
        // Last resort - show directly
        else {
            modalElement.style.display = 'block';
            modalElement.style.zIndex = '99999';
            modalElement.classList.add('show');
            document.body.classList.add('modal-open');
            
            // Add backdrop
            const backdrop = document.createElement('div');
            backdrop.className = 'modal-backdrop fade show';
            backdrop.style.zIndex = '99998';
            document.body.appendChild(backdrop);
        }
    });
    
    // Show payment confirmation modal
    function showPaymentModal() {
        const paymentModal = initPaymentModal();
        if (paymentModal) {
            paymentModal.show();
        }
    }
    
    // Initialize the payment modal on document ready
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize the payment modal
        const paymentModal = initPaymentModal();
        
        // Store the modal instance globally for easy access
        if (paymentModal) {
            window.paymentModal = paymentModal;
            window.paymentModalInstance = paymentModal;
        }
        
        // Set up event handlers for the payment modal
        const paymentModalElement = document.getElementById('paymentConfirmationModal');
        if (paymentModalElement) {
            // Reset form when modal is closed
            paymentModalElement.addEventListener('hidden.bs.modal', function() {
                $('#termsCheck').prop('checked', false);
                $('#proceedToPayment').prop('disabled', true);
            });
            
            // Ensure modal is on top when shown and handle z-index
            paymentModalElement.addEventListener('shown.bs.modal', function() {
                paymentModalElement.style.display = 'block';
                paymentModalElement.style.zIndex = '1060';
                
                // Ensure backdrop is below modal
                const backdrop = document.querySelector('.modal-backdrop');
                if (backdrop) {
                    backdrop.style.zIndex = '1050';
                }
            });
            
            // Handle close button and cancel button clicks
            $(paymentModalElement).find('.btn-close, .btn-secondary').off('click').on('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                if (paymentModal) {
                    paymentModal.hide();
                }
            });
            
            // Ensure modal content is clickable
            const modalContent = paymentModalElement.querySelector('.modal-content');
            if (modalContent) {
                modalContent.style.pointerEvents = 'auto';
            }
        }
    });
    
    // Process payment function with enhanced error handling
    async function processPayment(packageId, busIds, button) {
        const $button = $(button);
        const $buttonText = $button.find('.btn-text');
        const $spinner = $button.find('.spinner-border');
        const originalText = $buttonText.html();
        
        // Show loading state
        $buttonText.html('Processing...');
        $spinner.removeClass('d-none');
        $button.prop('disabled', true);
        $('#paymentConfirmationModal').find('.btn-close').prop('disabled', true);
        
        try {
            // Validate inputs
            if (!packageId || !busIds || busIds.length === 0) {
                throw new Error('Invalid package or bus selection');
            }
            
            // Call payment processing endpoint
            const response = await $.ajax({
                url: 'create_payment_hash.php',
                type: 'POST',
                dataType: 'json',
                data: {
                    package_id: packageId,
                    bus_ids: JSON.stringify(busIds),
                    _token: $('meta[name="csrf-token"]').attr('content') // For CSRF protection if needed
                },
                timeout: 30000 // 30 seconds timeout
            });
            
            if (!response) {
                throw new Error('No response from server');
            }
            
            if (response.error) {
                throw new Error(response.message || 'Payment processing failed');
            }
            
            // Handle successful payment initiation
            if (response.payment_url) {
                // Store payment info in session storage in case of page reload
                sessionStorage.setItem('pendingPayment', JSON.stringify({
                    packageId: packageId,
                    busIds: busIds,
                    timestamp: new Date().getTime()
                }));
                
                // Redirect to payment gateway
                window.location.href = response.payment_url;
            } else if (response.order_id) {
                // Direct success case (for free packages or immediate processing)
                window.location.href = 'payment_success.php?order_id=' + response.order_id;
            } else {
                throw new Error('Invalid response from server');
            }
            
        } catch (error) {
            console.error('Payment error:', error);
            
            // Show user-friendly error message
            const errorMessage = error.status === 0 ? 
                'Unable to connect to the server. Please check your internet connection.' :
                error.responseJSON?.message || error.message || 'An error occurred while processing your payment.';
                
            showAlert('danger', errorMessage);
            
            // Re-enable UI elements
            $buttonText.html(originalText);
            $spinner.addClass('d-none');
            $button.prop('disabled', false);
            $('#paymentConfirmationModal').find('.btn-close').prop('disabled', false);
            
            // Log additional debug info in development
            if (error.responseJSON) {
                console.error('Server response:', error.responseJSON);
            }
        }
    }
    
    // Function to show alert messages
    function showAlert(type, message) {
        // Remove any existing alerts
        $('.alert').alert('close');
        
        // Create and show new alert
        const $alert = $('<div>', {
            'class': 'alert alert-' + type + ' alert-dismissible fade show',
            'role': 'alert',
            'html': message + 
                   '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>'
        });
        
        // Add to the top of the container and show
        $('.container-fluid').prepend($alert);
        
        // Auto-dismiss after 5 seconds
        setTimeout(function() {
            $alert.alert('close');
        }, 5000);
    }
    
    // Handle upgrade buttons with better error handling and feedback
    $(document).on('click', '.upgrade-btn', function() {
        try {
            const $btn = $(this);
            const busId = $btn.data('bus-id');
            const busName = $btn.data('bus-name');
            const regNumber = $btn.data('reg-number') || '';
            
            if (!busId) {
                throw new Error('Invalid bus selection');
            }
            
            // Set the bus ID in the hidden input
            $('#upgradeBusId').val(busId);
            
            // Update the modal title with the bus name
            const displayName = busName || regNumber || 'Bus ' + busId;
            $('#upgradeModalLabel').text('Upgrade ' + displayName);
            
            // Show the upgrade modal
            const upgradeModal = new bootstrap.Modal(document.getElementById('upgradeModal'));
            upgradeModal.show();
            
            // Show info message
            showAlert('info', 'Selected bus: ' + displayName);
            
        } catch (error) {
            console.error('Error handling upgrade:', error);
            showAlert('danger', 'Failed to load upgrade options. Please try again.');
        }
    });
    
    // Handle manage subscription buttons with better feedback
    $(document).on('click', '.manage-subscription', function(e) {
        e.preventDefault();
        try {
            const $btn = $(this);
            const busId = $btn.data('bus-id');
            const subscriptionId = $btn.data('subscription-id');
            
            if (!subscriptionId) {
                throw new Error('Invalid subscription');
            }
            
            // Show loading state
            const originalText = $btn.html();
            $btn.html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Loading...');
            
            // In a real implementation, you would fetch subscription details here
            // For now, we'll simulate a short delay and show a message
            setTimeout(() => {
                $btn.html(originalText);
                showAlert('info', 'Subscription management feature coming soon!');
                
                // In a real implementation, you might open a modal with subscription details
                // loadSubscriptionDetails(subscriptionId);
                
            }, 500);
            
        } catch (error) {
            console.error('Error managing subscription:', error);
            showAlert('danger', 'Failed to load subscription details. Please try again.');
        }
    });
    
    // Handle modal hidden event to reset form
    $('#paymentConfirmationModal, #upgradeModal').on('hidden.bs.modal', function () {
        $(this).find('form').trigger('reset');
        $(this).find('.is-invalid').removeClass('is-invalid');
        $(this).find('.invalid-feedback').remove();
    });
    
    // Handle page refresh with pending payment
    $(window).on('load', function() {
        const pendingPayment = sessionStorage.getItem('pendingPayment');
        if (pendingPayment) {
            try {
                const paymentData = JSON.parse(pendingPayment);
                const now = new Date().getTime();
                
                // Only handle if less than 1 hour old
                if ((now - paymentData.timestamp) < 3600000) {
                    showAlert('warning', 'You have a pending payment. Please complete the payment process.');
                }
            } catch (e) {
                console.error('Error processing pending payment:', e);
            } finally {
                sessionStorage.removeItem('pendingPayment');
            }
        }
    });
    
    console.log('All event listeners initialized');
});
</script>

<?php include '../includes/footer.php'; ?>
