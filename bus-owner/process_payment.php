<?php
require_once '../includes/config.php';
require_once '../includes/functions.php';

// Check if user is logged in and is a bus owner
check_bus_owner_access();

// Get package details
$package_id = isset($_POST['package_id']) ? (int)$_POST['package_id'] : 0;
$bus_id = isset($_POST['bus_id']) ? (int)$_POST['bus_id'] : 0;

// Validate package and bus ownership
$package = $pdo->prepare("SELECT * FROM premium_packages WHERE id = ? AND is_active = 1");
$package->execute([$package_id]);
$package = $package->fetch(PDO::FETCH_ASSOC);

$bus = $pdo->prepare("SELECT * FROM buses WHERE id = ? AND user_id = ?");
$bus->execute([$bus_id, $_SESSION['user_id']]);
$bus = $bus->fetch(PDO::FETCH_ASSOC);

if (!$package || !$bus) {
    header('Location: premium_subscriptions.php?error=Invalid package or bus');
    exit();
}

// Generate a unique order ID
$merchant_order_id = 'BS' . time() . '_' . $bus_id . '_' . $package_id;

// Store order details in session for verification after payment
$_SESSION['payment_details'] = [
    'merchant_order_id' => $merchant_order_id,
    'package_id' => $package_id,
    'bus_id' => $bus_id,
    'amount' => $package['price'],
    'currency' => 'LKR'
];

// Prepare payment data for PayHere
$payment_data = [
    'merchant_id' => '1223759', // Replace with your PayHere Merchant ID for sandbox
    'return_url' => 'http://' . $_SERVER['HTTP_HOST'] . '/BS/bus-owner/payment_success.php',
    'cancel_url' => 'http://' . $_SERVER['HTTP_HOST'] . '/BS/bus-owner/premium_subscriptions.php?error=Payment was cancelled',
    'notify_url' => 'http://' . $_SERVER['HTTP_HOST'] . '/BS/bus-owner/payment_webhook.php',
    'first_name' => $_SESSION['first_name'] ?? 'Customer',
    'last_name' => $_SESSION['last_name'] ?? '',
    'email' => $_SESSION['email'] ?? '',
    'phone' => $_SESSION['phone'] ?? '0771234567',
    'address' => 'No.1, Galle Road',
    'city' => 'Colombo',
    'country' => 'Sri Lanka',
    'order_id' => $merchant_order_id,
    'items' => 'Premium Package: ' . $package['name'],
    'currency' => 'LKR',
    'amount' => number_format($package['price'], 2, '.', ''),
    'hash' => '' // Will be generated by JavaScript
];

// Store payment data in session for form submission
$_SESSION['payhere_payment_data'] = $payment_data;
?>
<!DOCTYPE html>
<html>
<head>
    <title>Processing Payment - <?php echo SITE_NAME; ?></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-6 text-center">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <h3>Processing Your Payment</h3>
                <p>Please wait while we redirect you to PayHere secure payment gateway...</p>
                <p class="text-muted">Do not refresh or close this page.</p>
            </div>
        </div>
    </div>

    <!-- PayHere Payment Form (Auto-submit) -->
    <form id="paymentForm" action="https://sandbox.payhere.lk/pay/checkout" method="post">
        <?php foreach ($payment_data as $key => $value): ?>
            <?php if ($key !== 'hash'): ?>
                <input type="hidden" name="<?php echo $key; ?>" value="<?php echo htmlspecialchars($value); ?>">
            <?php endif; ?>
        <?php endforeach; ?>
    </form>

    <!-- PayHere JavaScript -->
    <script type="text/javascript" src="https://www.payhere.lk/lib/payhere.js"></script>
    <script>
        // Auto-submit the form when the page loads
        document.addEventListener('DOMContentLoaded', function() {
            // Generate the hash (this should be done server-side in production)
            const paymentData = <?php echo json_encode($payment_data); ?>;
            
            // In a production environment, you should generate this hash on the server side
            // For sandbox/testing, we'll use a simple method (not secure for production)
            const hash = btoa(paymentData.merchant_id + paymentData.order_id + 
                            paymentData.amount + paymentData.currency + 
                            '8mM5XJ4kQZg6vW9y' + // Replace with your PayHere Merchant Secret for sandbox
                            paymentData.merchant_order_id);
            
            // Add hash to form and submit
            const hashInput = document.createElement('input');
            hashInput.type = 'hidden';
            hashInput.name = 'hash';
            hashInput.value = hash;
            document.getElementById('paymentForm').appendChild(hashInput);
            
            // Submit the form
            document.getElementById('paymentForm').submit();
        });
    </script>
</body>
</html>
